###########
# BUILDER #
###########

# pull official base image
FROM python:3.9-slim-buster as builder

# set work directory
WORKDIR /usr/src/

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Required to install node
# needed to start installing dependencies
RUN apt-get update && apt-get -y upgrade \
# install general required libraries
&& apt-get -y install build-essential curl netcat \
# install psycopg2 dependencies
libpq-dev \
# install cffi dependencies
libffi-dev \
# install pillow dependencies
libjpeg-dev zlib1g-dev \
# install pygraphviz dependencies
graphviz graphviz-dev \
&& apt-get -y clean autoclean \
&& apt-get -y autoremove

# install project dependencies
RUN pip install --upgrade pip
RUN pip install poetry
COPY ./poetry.lock ./pyproject.toml /usr/src/
# To reduce the size of the image is recomended to build the dependencies,
# pip is better at this, so we export the dependencies to a requirements file
RUN poetry export -f requirements.txt  | pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/wheels -r /dev/stdin

# changing working dir to bring the app here
WORKDIR /usr/src/app/

# copy project
COPY . /usr/src/app/

# react
# changing working dir once more, this makes running the commands a lot more easier.
WORKDIR /usr/src/app/frontend
# install npm
RUN curl -sL https://deb.nodesource.com/setup_15.x | bash -
RUN apt-get -y install nodejs \
&& apt-get -y clean autoclean \
&& apt-get -y autoremove \
# update npm
RUN npm install -g npm@7.5.3 \
&& npm install \
&& npm audit fix --force \
&& npm run dev \
&& npx browserslist@latest --update-db \
# to reduce the image size lets delete all the unneeded files.
&& rm -rf /usr/src/app/frontend/node_modules/ \
&& rm -rf /usr/src/app/frontend/src/ \
&& rm -rf /usr/src/app/frontend/.babelrc \
&& rm -rf /usr/src/app/frontend/*.js* \
&& rm -rf /usr/src/app/.coverage* \
&& rm -rf /usr/src/app/.gitignore \
&& rm -rf /usr/src/app/.travis.yml \
&& rm -rf /usr/src/app/Dockerfile* \
&& rm -rf /usr/src/app/*.sh \
&& rm -rf /usr/src/app/Procfile


#########
# FINAL #
#########

# pull official base image
FROM python:3.9-slim-buster

# needed to start installing dependencies
RUN apt-get update && apt-get -y upgrade \
# install pillow dependencies
&& apt-get -y install libjpeg-dev zlib1g-dev \
# install psycopg2 dependencies
libpq-dev \
&& apt-get -y clean autoclean \
&& apt-get -y autoremove

# install project dependencies
COPY --from=builder /usr/src/wheels /wheels
RUN pip install --no-deps --no-cache /wheels/*

# create directory for the app user
RUN mkdir -p /home/app \
&& mkdir -p /var/lib/codeshepherds/data \
# create the app user
&& groupadd app && useradd app -g app \
# chown all the files to the app user
&& chown app:app -R /home/app \
&& chown app:app -R /var/lib/codeshepherds/data

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir -p $APP_HOME \
&& mkdir -p $APP_HOME/static \
&& mkdir -p $APP_HOME/media
WORKDIR $APP_HOME

# copy shell scripts
COPY ./env_secrets_expand.sh $APP_HOME
COPY ./entrypoint.sh $APP_HOME
# copy project
COPY --from=builder /usr/src/app $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.sh"]
